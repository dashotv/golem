// Code generated by github.com/dashotv/golem. DO NOT EDIT.
{{- $group := .Group }}
import { {{ if $group.Rest }}Setting, {{end}}{{.Config.Name}}Client } from './client.gen';
{{ $name := .Config.Name -}}
{{ if ne $group.TypescriptType "" -}}
import { {{ $group.TypescriptType }} } from './models.gen';
{{ end -}}

{{ range $r, $route := $group.CombinedRoutes -}}
{{ if $route.HasParams }}
export interface {{$group.Camel}}{{$route.Camel}}Request {
  {{- range $p, $param := $route.Params }}
  {{$param.Name}}: {{$param.TypescriptType}};
  {{- end }}
}
{{- end }}
{{ if ne $route.Result "" -}}
export interface {{$group.Camel}}{{$route.Camel}}Response extends Response {
  result: {{$route.TypescriptResult}};{{ if $route.Index }}
  total: number;
  {{- end }}
}
{{- end }}
{{- end }}

{{ range $r, $route := $group.CombinedRoutes -}}
export const {{ $group.Camel }}{{ $route.Camel }} = async ({{if $route.HasParams }}params: {{$group.Camel}}{{$route.Camel}}Request{{end}}) => {
  const response = await {{$name}}Client.{{$route.TypescriptMethod}}(`/api/{{$name}}{{$group.Path}}{{$route.TypescriptPath}}?{{$route.QueryString}}`{{ if $route.HasModel }}, params.{{ $route.GetModel.Name }}{{end}});
  return response.data as {{ if ne $route.Result "" }}{{$group.Camel}}{{$route.Camel}}Response{{else}}Response{{end}};
};
{{ end -}}
